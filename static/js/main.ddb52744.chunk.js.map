{"version":3,"sources":["components/app-header/shopping-cart-solid.svg","components/app/food-bg.jpg","components/menu-list-item/index.js","components/menu-list-item/menu-list-item.js","components/resto-service-context/index.js","components/resto-service-context/resto-service-context.js","components/hoc/index.js","components/hoc/with-resto-service.js","actions/index.js","components/spinner/index.js","components/spinner/spinner.js","components/error/index.js","components/error/error.js","components/menu-list/menu-list.js","components/menu-list/index.js","components/pages/main-page.js","components/cart-table/cart-table.js","components/cart-table/index.js","components/pages/cart-page.js","components/pages/item-page.js","components/app-header/index.js","components/app-header/app-header.js","components/app/index.js","components/app/app.js","components/error-boundary/index.js","components/error-boundary/error-boundary.js","services/resto-service.js","reducers/index.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","MenuListItem","_ref","menuItem","onAddToCart","title","price","url","category","react_default","a","createElement","Fragment","className","react_router_dom","to","concat","id","src","alt","onClick","e","preventDefault","RestoServiceContext","React","createContext","WithRestoService","Wrapped","props","components_resto_service_context","Consumer","RestoService","Object","assign","menuLoaded","newMenu","type","payload","menuRequested","addedToCart","menuError","Spinner","Error","MenuList","_this","this","getMenuItems","then","res","catch","_this$props","menuItems","loading","error","components_error","components_spinner","items","map","components_menu_list_item","key","menu_list_View","Component","mapDispatchToProps","View","connect","state","menu","MainPage","components_menu_list","generateOrder","item","qntty","deleteFromCart","CartTable","_ref2","length","setOrder","CartPage","components_cart_table","ItemPage","_this2","find","el","match","params","AppHeader","totalPrice","cartIcon","App","style","background","Background","components_app_header","react_router","path","component","exact","ErrorBoundary","setState","children","_apiBase","fetch","ok","status","json","getResource","console","log","order","getOrderNumber","number","newOrder","method","headers","Content-Type","body","JSON","stringify","orderNumber","initialState","reducer","arguments","undefined","action","objectSpread","itemInd","findIndex","itemInState","newItem","toConsumableArray","slice","idx","itemIndex","store","createStore","restoService","ReactDOM","render","es","error_boundary","Provider","value","basename","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.ddb52744.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shopping-cart-solid.701d6d1d.svg\";","module.exports = __webpack_public_path__ + \"static/media/food-bg.698e5e80.jpg\";","import MenuListItem from './menu-list-item';\r\nexport default MenuListItem;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport './menu-list-item.scss';\r\n\r\nconst MenuListItem = ({menuItem, onAddToCart}) => {\r\n    const {title, price, url, category} = menuItem;\r\n    return (\r\n        <>\r\n            <li className=\"menu__item\">\r\n                <Link to = {`/${menuItem.id}`}>\r\n                    <div className=\"menu__title\">{title}</div>\r\n                    <img className=\"menu__img\" src={url} alt={title}></img>\r\n                    <div className=\"menu__category\">Category: <span>{category}</span></div>\r\n                    <div className=\"menu__price\">Price: <span>${price}</span></div>\r\n                    <button onClick = {(e) => {\r\n                            e.preventDefault();\r\n                            onAddToCart();\r\n                        } } \r\n                        className=\"menu__btn\">Add to cart</button>\r\n                    <span className = {`menu__category_Img ${category}`}></span>\r\n                </Link>\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MenuListItem;","import RestoServiceContext from './resto-service-context';\r\n\r\nexport default RestoServiceContext;","import React from 'react'\r\n\r\nconst RestoServiceContext = React.createContext();\r\n\r\nexport default RestoServiceContext;\r\n","import WithRestoService from './with-resto-service';\r\n\r\nexport default WithRestoService;","import React from 'react';\r\nimport RestoServiceContext from '../resto-service-context';\r\n\r\nconst WithRestoService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n            <RestoServiceContext.Consumer>\r\n                {\r\n                    (RestoService) => {\r\n                        return <Wrapped {...props} RestoService={RestoService}/>\r\n                    }\r\n                }\r\n            </RestoServiceContext.Consumer>\r\n        )\r\n    }\r\n};\r\n\r\nexport default WithRestoService;","const menuLoaded = (newMenu) => {\r\n    return {\r\n        type: 'MENU_LOADED',\r\n        payload: newMenu\r\n    };\r\n};\r\n\r\nconst menuRequested = () => {\r\n    return {\r\n        type: 'MENU_REQUESTED'\r\n    };\r\n};\r\n\r\nconst addedToCart = (id) => {\r\n    return {\r\n        type: 'ITEM_ADD_TO_CART',\r\n        payload: id\r\n    };\r\n};\r\n\r\nconst deleteFromCart = (id) => {\r\n    return {\r\n        type: 'ITEM_REMOVE_FROM_CART',\r\n        payload: id\r\n    };\r\n};\r\n\r\nconst menuError = () => {\r\n    return {\r\n        type: 'MENU_ERROR'\r\n    };\r\n};\r\n\r\nexport {\r\n    menuLoaded,\r\n    menuRequested,\r\n    addedToCart,\r\n    deleteFromCart,\r\n    menuError\r\n};","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n    return <div className=\"spinner\">loading...</div>\r\n}\r\n\r\nexport default Spinner;","import Error from './error';\r\n\r\nexport default Error;","import React from 'react';\r\n\r\nconst Error = () => {\r\n    return <div className=\"error\">Error</div>\r\n}\r\n\r\nexport default Error;","import React, {Component} from 'react';\r\nimport MenuListItem from '../menu-list-item';\r\nimport {connect} from 'react-redux';\r\nimport WithRestoService from '../hoc';\r\nimport {menuLoaded, menuRequested, addedToCart, menuError} from '../../actions';\r\nimport Spinner from '../spinner';\r\nimport Error from '../error';\r\n\r\nimport './menu-list.scss';\r\n\r\nclass MenuList extends Component {\r\n    componentDidMount() {\r\n        this.props.menuRequested();\r\n\r\n        const {RestoService} = this.props;\r\n        RestoService.getMenuItems()\r\n            .then(res => this.props.menuLoaded(res))\r\n            .catch(() => this.props.menuError());\r\n    }\r\n\r\n    render() {\r\n        const {menuItems, loading, addedToCart, error} = this.props;\r\n\r\n        if (error) {\r\n            return <Error/>\r\n        }\r\n\r\n        if (loading) {\r\n            return <Spinner/>\r\n        }\r\n        const items = menuItems.map(menuItem => {\r\n                return (\r\n                    <MenuListItem \r\n                    key={menuItem.id} \r\n                    menuItem={menuItem}\r\n                    onAddToCart={() => addedToCart(menuItem.id)}/>\r\n                    )\r\n            })\r\n\r\n        return (\r\n            <View items = {items}/>            \r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        menuItems: state.menu,\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    menuLoaded,\r\n    menuRequested,\r\n    addedToCart,\r\n    menuError\r\n};\r\n\r\nconst View = ({items}) => {\r\n    return (\r\n        <ul className=\"menu__list\">\r\n            {items}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default WithRestoService()(connect(mapStateToProps, mapDispatchToProps)(MenuList));","import MenuList from './menu-list';\r\nexport default MenuList;","import React from 'react';\r\nimport MenuList from '../menu-list';\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <MenuList/>\r\n    )\r\n}\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport './cart-table.scss';\r\nimport {connect} from 'react-redux'\r\nimport {deleteFromCart} from '../../actions';\r\nimport WithRestoService from '../hoc';\r\n\r\nconst CartTable = ({items, deleteFromCart, RestoService}) => {\r\n    if ( items.length === 0 ) {\r\n        return (<div className=\"cart__title\"> Ваша корзина пуста :( </div>)\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"cart__title\">Ваш заказ:</div>\r\n            <div className=\"cart__list\">\r\n                {\r\n                    items.map(item => {\r\n                        const {title, url, price, id, qntty} = item;\r\n                        return (\r\n                            <div key={id} className=\"cart__item\">\r\n                                <img src={url} className=\"cart__item-img\" alt={title}></img>\r\n                                <div className=\"cart__item-title\">{title}</div>\r\n                                <div className=\"cart__item-price\">${price} * {qntty}</div>\r\n                                <div onClick={() => deleteFromCart(id)} className=\"cart__close\">&times;</div>\r\n                             </div>\r\n                        );\r\n                    })\r\n                }               \r\n            </div>\r\n            <button \r\n                onClick = {() => {RestoService.setOrder( generateOrder(items) ) }}\r\n                className = \"order\">\r\n                    Оформить заказ    \r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\nconst generateOrder = (items) => {\r\n    const newOrder = items.map(item => {\r\n        return {\r\n            id: item.id,\r\n            qntty: item.qntty\r\n        }\r\n    })\r\n    return newOrder;\r\n}\r\n\r\nconst mapStateToProps = ({items}) => {\r\n    return {\r\n        items\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    deleteFromCart\r\n};\r\n\r\nexport default WithRestoService()(connect(mapStateToProps, mapDispatchToProps)(CartTable));","import CartTable from './cart-table';\r\n\r\nexport default CartTable;","import React from 'react';\r\nimport CartTable from '../cart-table';\r\n\r\nconst CartPage = () => {\r\n    return (\r\n        <div className=\"cart\"> \r\n            <CartTable/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartPage;","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport WithRestoService from '../hoc';\r\nimport Spinner from '../spinner';\r\nimport Error from '../error';\r\nimport {menuLoaded, menuRequested, addedToCart, menuError} from '../../actions';\r\n\r\nimport './item-page.css';\r\n\r\nclass ItemPage extends Component {\r\n\r\n    componentDidMount() {\r\n        if( this.props.menuItems.length === 0){\r\n            this.props.menuRequested();\r\n\r\n            const {RestoService} = this.props;\r\n            RestoService.getMenuItems()\r\n                .then(res => this.props.menuLoaded(res))\r\n                .catch(error => this.props.menuError());\r\n        }        \r\n    }\r\n\r\n    render() {\r\n        const {menuItems, loading, addedToCart, error} = this.props;\r\n\r\n        if (error) {\r\n            return(\r\n                <div className=\"item_page\">\r\n                    <Error/>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (loading) {\r\n            return (\r\n                <div className=\"item_page\">\r\n                    <Spinner/>\r\n                </div>     \r\n            )       \r\n        }\r\n        const item = menuItems.find(el => +el.id === +this.props.match.params.id)\r\n        const {title, price, url, category, id} = item;\r\n\r\n        return (\r\n            <div className =\"item_page\">\r\n                <div className=\"menu__item item_block\">\r\n                    <div className=\"menu__title\">{title}</div>\r\n                    <img className=\"menu__img\" src={url} alt={title}></img>\r\n                    <div className=\"menu__category\">Category: <span>{category}</span></div>\r\n                    <div className=\"menu__price\">Price: <span>${price}</span></div>\r\n                    <button onClick = {() => addedToCart(id)} \r\n                        className=\"menu__btn\">Add to cart</button>\r\n                    <span className = {`menu__category_Img ${category}`}></span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        menuItems: state.menu,\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    menuLoaded,\r\n    menuRequested,\r\n    menuError,\r\n    addedToCart\r\n}\r\n\r\nexport default WithRestoService ()( connect(mapStateToProps, mapDispatchToProps)(ItemPage) );\r\n","import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport cartIcon from './shopping-cart-solid.svg';\r\nimport './app-header.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nconst AppHeader = ({totalPrice}) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <Link to={'/'} className = \"header__link\">Menu</Link>\r\n            <Link to=\"/cart\" className = \"header__link\">\r\n                <img className=\"header__cart\" src={cartIcon} alt=\"cart\"></img>\r\n                Total: {totalPrice} $\r\n            </Link>\r\n        </header>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = ({totalPrice}) => {\r\n    return{\r\n        totalPrice\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AppHeader);","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\nimport {MainPage, CartPage, ItemPage} from '../pages';\r\nimport AppHeader from '../app-header';\r\n\r\nimport Background from './food-bg.jpg';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nconst App = () => {    \r\n    return (\r\n        <div style={{background: `url(${Background}) center center/cover no-repeat`}} className=\"app\">\r\n            <AppHeader/>\r\n            <Switch>\r\n                <Route \r\n                    path='/' \r\n                    component={MainPage}\r\n                    exact/>\r\n                <Route \r\n                    path='/cart' \r\n                    component={CartPage}\r\n                    />\r\n                <Route\r\n                    path='/:id'\r\n                    component={ItemPage}\r\n                    />\r\n            </Switch>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import ErrorBoundary from './error-boundary';\r\n\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\r\nimport Error from '../error';\r\n\r\nexport default class ErrorBoundary extends Component {\r\n\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({error: true});\r\n    }\r\n\r\n    render() {       \r\n        if (this.state.error) {\r\n            return <Error/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}","export default class RestoService {\r\n    _apiBase = 'https://my-json-server.typicode.com/gnobious/resto-spa-db';\r\n\r\n    async getResource(url) {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n        \r\n        if (!res.ok){\r\n            throw new Error(`Could not fetch ${url}`  +\r\n             `, recieved ${res.status}`);\r\n        }        \r\n        return await res.json();\r\n    }\r\n\r\n    async getMenuItems () {\r\n        return await this.getResource('/menu/');\r\n    }\r\n\r\n    async getItem(id) {\r\n        const res = await this.getResource('/menu/');\r\n        console.log(res);\r\n        const item = res.find( (el) => {\r\n            console.log(`el.id: ${el.id}, id: ${id}`);\r\n            return el.id === +id;\r\n        })\r\n        console.log(item);\r\n        return item;\r\n    }\r\n\r\n    async setOrder(order) {\r\n        const number = await this.getOrderNumber();\r\n        const newOrder = {\r\n            id: number,\r\n            order: order\r\n        }\r\n        const response = await fetch(`${this._apiBase}/orders`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(newOrder)\r\n        });\r\n        if (!response.ok){\r\n            throw new Error('json error');\r\n        }\r\n    }\r\n\r\n    async getOrderNumber(){\r\n        const res = await this.getResource('/orders/');\r\n        const orderNumber = res.length+1;\r\n\r\n        return orderNumber\r\n    }\r\n}","const initialState = {\r\n    menu: [],\r\n    loading: true,\r\n    error: false,\r\n    items: [],\r\n    totalPrice: 0\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'MENU_LOADED':\r\n            return {\r\n                ...state,\r\n                menu: action.payload,\r\n                loading: false,\r\n                error: false\r\n            };\r\n        case 'MENU_REQUESTED':\r\n            return {\r\n                ...state,\r\n                menu: state.menu,\r\n                loading: true,\r\n                error: false\r\n            };\r\n        case 'MENU_ERROR':\r\n            return {\r\n                ...state,\r\n                menu: state.menu,\r\n                loading: true,\r\n                error: true\r\n            }\r\n        case 'ITEM_ADD_TO_CART':            \r\n                const id = action.payload;\r\n                const itemInd = state.items.findIndex(item => item.id === id);\r\n                if (itemInd >=0) {\r\n                    const itemInState = state.items.find(item => item.id === id);\r\n                    const newItem = {\r\n                        ...itemInState,\r\n                        qntty: ++itemInState.qntty\r\n                    }\r\n                    return {\r\n                        ...state,\r\n                        items: [\r\n                            ...state.items.slice(0, itemInd),\r\n                            newItem,\r\n                            ...state.items.slice(itemInd + 1)\r\n                        ],\r\n                        totalPrice: state.totalPrice + newItem.price\r\n                    }\r\n                }\r\n                const item = state.menu.find(item => item.id === id);\r\n                const newItem = {\r\n                    title: item.title,\r\n                    price: item.price,\r\n                    url: item.url,\r\n                    id: item.id,\r\n                    qntty: 1                \r\n                 };\r\n\r\n                 return {\r\n                     ...state,\r\n                     items: [\r\n                         ...state.items,\r\n                         newItem\r\n                     ],\r\n                     totalPrice: state.totalPrice + newItem.price\r\n                 };\r\n        case 'ITEM_REMOVE_FROM_CART':\r\n            const idx = action.payload;\r\n            const itemIndex = state.items.findIndex(item => item.id === idx);\r\n            const price = state.items[itemIndex]['price'] * state.items[itemIndex]['qntty'];\r\n            return {\r\n                ...state,\r\n                items: [\r\n                    ...state.items.slice(0,itemIndex),\r\n                    ...state.items.slice(itemIndex + 1)\r\n                ],\r\n                totalPrice: state.totalPrice - price\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import {createStore} from 'redux';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\nimport {Provider} from 'react-redux';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport ErrorBoundary from './components/error-boundary';\r\nimport RestoService from './services/resto-service'\r\nimport RestoServiceContext from './components/resto-service-context';\r\nimport store from './store';\r\n\r\nimport './index.scss';\r\n\r\nconst restoService = new RestoService();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ErrorBoundary>\r\n            <RestoServiceContext.Provider value={restoService}>\r\n                <Router\r\n                    basename=\"/resto-spa\">\r\n                    <App/>\r\n                </Router>\r\n            </RestoServiceContext.Provider>\r\n        </ErrorBoundary>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}